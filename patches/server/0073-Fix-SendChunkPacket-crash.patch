From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Sat, 10 Dec 2022 05:54:32 +0100
Subject: [PATCH] Fix SendChunkPacket crash.


diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/SendChunkPacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/SendChunkPacket.java
index 9891f1557d9b3d3f64912e095d54b1042d47a4fb..bed47074d3d387d5442cf5b953af644ae0c6076d 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/SendChunkPacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/SendChunkPacket.java
@@ -16,6 +16,7 @@ import puregero.multipaper.ChunkKey;
 import puregero.multipaper.ExternalServerConnection;
 import puregero.multipaper.MultiPaper;
 
+import com.github.luben.zstd.ZstdInputStream;
 import java.io.ByteArrayInputStream;
 import java.io.DataInputStream;
 import java.io.IOException;
@@ -69,7 +70,14 @@ public class SendChunkPacket extends ExternalServerPacket {
             if (callback != null) {
                 if (data.length == 0) {
                     LOGGER.warn(connection.externalServer.getName() + " sent us an empty chunk for " + world + "," + cx + "," + cz + ", force loading it from disk");
-                    MultiPaper.forceReadChunk(world, "region", cx, cz).thenAccept(data2 -> callback.accept(data2.length == 0 ? null : new DataInputStream(new ByteArrayInputStream(data2))));
+                    MultiPaper.forceReadChunk(world, "region", cx, cz).thenAccept(data2 -> {
+                        if (data2.length == 0) callback.accept(null);
+                        else {
+                            try {
+                                callback.accept(new DataInputStream(new ZstdInputStream(new ByteArrayInputStream(data2))));
+                            } catch (IOException ex) {}
+                        }
+                    });
                 } else {
                     callback.accept(new DataInputStream(new ByteArrayInputStream(data)));
                 }
