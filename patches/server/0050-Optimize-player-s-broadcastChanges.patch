From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Wed, 23 Nov 2022 22:11:24 +0100
Subject: [PATCH] Optimize player's broadcastChanges.


diff --git a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
index 49b063655dfc09e30d446dbf07503fdda04a7e30..4f266a86f820511b0fd9670f1680101cd4fcf243 100644
--- a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
@@ -292,7 +292,7 @@ public abstract class AbstractContainerMenu {
     private void triggerSlotListeners(int slot, ItemStack stack, Supplier<ItemStack> copySupplier) {
         ItemStack itemstack1 = (ItemStack) this.lastSlots.get(slot);
 
-        if (!ItemStack.matches(itemstack1, stack)) {
+        if (!ItemStack.rapidItemStackMatch(itemstack1, stack)) {
             ItemStack itemstack2 = (ItemStack) copySupplier.get();
 
             this.lastSlots.set(slot, itemstack2);
@@ -311,7 +311,7 @@ public abstract class AbstractContainerMenu {
         if (!this.suppressRemoteUpdates) {
             ItemStack itemstack1 = (ItemStack) this.remoteSlots.get(slot);
 
-            if (!ItemStack.matches(itemstack1, stack)) {
+            if (!ItemStack.rapidItemStackMatch(itemstack1, stack)) {
                 ItemStack itemstack2 = (ItemStack) copySupplier.get();
 
                 this.remoteSlots.set(slot, itemstack2);
diff --git a/src/main/java/net/minecraft/world/item/ItemStack.java b/src/main/java/net/minecraft/world/item/ItemStack.java
index c99d4266c2f728617a19f4d125a851bad844bb4e..4b6e8b234120ea66a09a779dc7f1c98465ce5161 100644
--- a/src/main/java/net/minecraft/world/item/ItemStack.java
+++ b/src/main/java/net/minecraft/world/item/ItemStack.java
@@ -59,6 +59,7 @@ import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.inventory.ClickAction;
 import net.minecraft.world.inventory.Slot;
 import net.minecraft.world.inventory.tooltip.TooltipComponent;
+import net.minecraft.world.item.BlockItem; // MultiPaper
 import net.minecraft.world.item.context.UseOnContext;
 import net.minecraft.world.item.enchantment.DigDurabilityEnchantment;
 import net.minecraft.world.item.enchantment.Enchantment;
@@ -68,6 +69,7 @@ import net.minecraft.world.level.ItemLike;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.BaseEntityBlock;
 import net.minecraft.world.level.block.Block;
+import net.minecraft.world.level.block.ShulkerBoxBlock; // MultiPaper
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -705,6 +707,19 @@ public final class ItemStack {
         }
     }
 
+    // MultiPaper start
+    public static boolean rapidItemStackMatch(ItemStack left, ItemStack right) {
+        if(!left.isEmpty() && !right.isEmpty()) {
+            if(left.getItem() instanceof BlockItem && right.getItem() instanceof BlockItem) {
+                if(((BlockItem)left.getItem()).getBlock() instanceof ShulkerBoxBlock && ((BlockItem)right.getItem()).getBlock() instanceof ShulkerBoxBlock) {
+                    return true; // Fast skip for shulkers, don't even bother with NBT tags
+                }
+            }
+        }
+        return matches(left, right);
+    }
+    // Multipaper end
+
     public static boolean tagMatches(ItemStack left, ItemStack right) {
         return left.isEmpty() && right.isEmpty() ? true : (!left.isEmpty() && !right.isEmpty() ? (left.tag == null && right.tag != null ? false : left.tag == null || left.tag.equals(right.tag)) : false);
     }
